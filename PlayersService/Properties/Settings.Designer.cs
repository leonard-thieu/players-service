//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace toofz.NecroDancer.Leaderboards.PlayersService.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.3.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        /// <summary>
        /// The version of the settings file format.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The version of the settings file format.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int Version {
            get {
                return ((int)(this["Version"]));
            }
        }
        
        /// <summary>
        /// The minimum amount of time that should pass between each cycle.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The minimum amount of time that should pass between each cycle.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:00:30")]
        public global::System.TimeSpan UpdateInterval {
            get {
                return ((global::System.TimeSpan)(this["UpdateInterval"]));
            }
            set {
                this["UpdateInterval"] = value;
            }
        }
        
        /// <summary>
        /// The amount of time to wait after a cycle to perform garbage collection.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The amount of time to wait after a cycle to perform garbage collection.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:00:05")]
        public global::System.TimeSpan DelayBeforeGC {
            get {
                return ((global::System.TimeSpan)(this["DelayBeforeGC"]));
            }
            set {
                this["DelayBeforeGC"] = value;
            }
        }
        
        /// <summary>
        /// An Application Insights instrumentation key.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("An Application Insights instrumentation key.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string InstrumentationKey {
            get {
                return ((string)(this["InstrumentationKey"]));
            }
            set {
                this["InstrumentationKey"] = value;
            }
        }
        
        /// <summary>
        /// The number of rounds to execute a key derivation function.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The number of rounds to execute a key derivation function.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("20000")]
        public int KeyDerivationIterations {
            get {
                return ((int)(this["KeyDerivationIterations"]));
            }
            set {
                this["KeyDerivationIterations"] = value;
            }
        }
        
        /// <summary>
        /// The number of players to update.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The number of players to update.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("500")]
        public int PlayersPerUpdate {
            get {
                return ((int)(this["PlayersPerUpdate"]));
            }
            set {
                this["PlayersPerUpdate"] = value;
            }
        }
        
        /// <summary>
        /// The base address of toofz API.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The base address of toofz API.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://localhost:49603/")]
        public string ToofzApiBaseAddress {
            get {
                return ((string)(this["ToofzApiBaseAddress"]));
            }
            set {
                this["ToofzApiBaseAddress"] = value;
            }
        }
        
        /// <summary>
        /// The user name used to log on to toofz API.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The user name used to log on to toofz API.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("PlayersService")]
        public string ToofzApiUserName {
            get {
                return ((string)(this["ToofzApiUserName"]));
            }
            set {
                this["ToofzApiUserName"] = value;
            }
        }
        
        /// <summary>
        /// The password used to log on to toofz API.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The password used to log on to toofz API.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::toofz.Services.EncryptedSecret ToofzApiPassword {
            get {
                return ((global::toofz.Services.EncryptedSecret)(this["ToofzApiPassword"]));
            }
            set {
                this["ToofzApiPassword"] = value;
            }
        }
        
        /// <summary>
        /// A Steam Web API key.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("A Steam Web API key.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::toofz.Services.EncryptedSecret SteamWebApiKey {
            get {
                return ((global::toofz.Services.EncryptedSecret)(this["SteamWebApiKey"]));
            }
            set {
                this["SteamWebApiKey"] = value;
            }
        }
    }
}
